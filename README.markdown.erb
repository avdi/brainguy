# Brainguy

![Observer, AKA "Brain Guy"](http://static.tvtropes.org/pmwiki/pub/images/MST3K_Brain_Guy_7093.jpg)

Brainguy is an Observer library for Ruby.

## Synopsis

```ruby
<%= File.read("examples/synopsis.rb") %>
```

## Introduction

*Well, here we are again.*

Back with another of those block-rockin' READMEs!

*You know, I can just leave now.*

Sorry. It won't happen again.

*So, "Brainguy", huh. What's the deal this time?*

This is an Observer pattern library for Ruby. The name is a play on the
character from Mystery Sci---

*Yeah yeah blah blah nerd nerd very clever. What's it do?*

In a nutshell, it's a decoupling mechanism. It lets "listener" objects
subscribe to events generated by other objects.

*Kind of like the `observer` Ruby standard library?"*

Yeah, exactly. But this library is a little bit fancier. It adds a
number of conveniences that you otherwise might have to build yourself on top of `observer`.

*Such as?*

Well, the most important feature it has is *named event types*. Instead of a single "update" event, events have symbolic names. Listeners can choose which events they care about, and ignore the rest.

*What exactly is a "listener"? Is it a special kind of object?*

Not really, no. Fundamentally a listener is any object which responds to `#call`. The most obvious example of such an object is a `Proc`. Here's an example of using a proc as a simple listener:

```ruby
<%= File.read("examples/proc_listener.rb") %>
```

## Installation

Add this line to your application's Gemfile:

```ruby
gem 'brainguy'
```

And then execute:

    $ bundle

Or install it yourself as:

    $ gem install brainguy

## Usage

Coming soon!

## Contributing

1. Fork it ( https://github.com/[my-github-username]/brainguy/fork )
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Add some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create a new Pull Request
